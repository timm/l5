
 -b  --bins    max number of bins                     = 8
 -d  --dump    on test failure, exit with stack dump  = false
 -f  --file    file with csv data                     = ../data/auto93.csv
 -F  --Far     how far to look for poles (max=1)      = .95
 -g  --go      start-up example                       = nothing
 -h  --help    show help                              = false
 -m  --min     min size. If<1 then t^min else min.    = 10
 -n  --nums    number of nums to keep                 = 512
 -p  --p       distance calculation coefficient       = 2
 -r  --rest    size of "rest" set                     = 3
 -s  --seed    random number seed                     = 10019
 -S  --Sample  how many numbers to keep               = 10000]]

sept 15 2022

lua tiny2.lua -g best

>>>>>	best
../data/auto2.csv	{2 26 43 69 90}	{2 18 34 52 89}	{2 12 19 28 54}	{5 5 5 5 5}
>>>>>	best
../data/auto93.csv	{0 18 30 60 100}	{0 11 26 40 85}	{0 0 1 6 57}	{7 7 7 7 7}
>>>>>	best
../data/nasa93dem.csv	{1 13 35 70 98}	{1 3 12 33 92}	{1 2 4 5 14}	{5 5 5 5 5}
>>>>>	best
../data/china.csv	{1 11 28 54 93}	{0 4 12 27 65}	{1 1 3 6 11}	{7 7 7 7 7}
>>>>>	best
../data/coc1000.csv	{4 30 55 70 97}	{0 20 42 77 99}	{4 6 13 19 35}	{8 8 8 8 8}
>>>>>	best
../data/healthCloseIsses12mths0011-easy.csv	{0 11 23 41 100}	{1 13 22 29 70}	{0 3 8 18 20}	{11 12 12 12 12}
>>>>>	best
../data/healthCloseIsses12mths0001-hard.csv	{1 19 38 76 97}	{0 11 30 75 92}	{1 2 4 9 23}	{11 11 11 12 12}
>>>>>	best
../data/pom.csv	{1 21 42 69 100}	{0 7 17 43 95}	{8 16 23 66 73}	{11 11 11 12 12}
>>>>>	best
../data/SSN.csv	{3 15 33 60 94}	{3 10 17 26 90}	{4 5 7 14 36}	{13 14 14 14 14}
>>>>>	best
../data/SSM.csv	{0 19 32 51 96}	{0 7 19 30 71}	{0 2 3 9 23}	{16 16 16 16 16}

